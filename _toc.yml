# Table of contents
# Learn more at https://jupyterbook.org/customize/toc.html

format: jb-book
root: index
title: Introduction
#defaults:
options:
parts:
  - caption: Chapters
    numbered: 1
    chapters:
    - file: chapters/syntax
    - file: chapters/hello-world
    - file: chapters/compilation
    - file: chapters/execution
    - file: chapters/interpretation
    - file: chapters/comments
    - file: chapters/values
    - file: chapters/variables
    - file: chapters/data-types
    - file: chapters/expressions
    - file: chapters/arithmetic-operators
    - file: chapters/equality-operators
    - file: chapters/relational-operators
    - file: chapters/logical-operators
    - file: chapters/assignment-operator
    - file: chapters/precedence
    - file: chapters/associativity
    - file: chapters/constants
    - file: chapters/statements
    - file: chapters/type-inference
    #- file: chapters/blocks # TODO
    - file: chapters/type-checking
    - file: chapters/floating-point-types

    - file: chapters/enumeration-types
    - file: chapters/selection-statements
    - file: chapters/selection-expressions
    - file: chapters/iteration

    - file: chapters/arrays
    #- file: chapters/jagged-arrays # TODO
    #- file: chapters/multidimensional-arrays # TODO
    - file: chapters/reference-types
    - file: chapters/value-types

    - file: chapters/local-functions
    - file: chapters/fat-arrows
    - file: chapters/recursion

    - file: chapters/namespaces

    - file: chapters/objects
    - file: chapters/classes
    - file: chapters/access-modifiers
    - file: chapters/fields
    - file: chapters/constructors
    - file: chapters/the-this-keyword
    - file: chapters/instance-methods
    - file: chapters/encapsulation
    - file: chapters/auto-implemented-properties
    - file: chapters/manually-implemented-properties
    - file: chapters/object-initializers
    - file: chapters/read-only-fields
    - file: chapters/read-only-properties
    - file: chapters/computed-properties
    - file: chapters/required-properties-and-fields
    - file: chapters/init-only-properties
    - file: chapters/instance-method-overloading
    - file: chapters/constructor-overloading
    #- file: chapters/named-and-optional-parameters # TODO

    # TODO:
    #- file: chapters/basic-access-modifiers
    #- file: chapters/instantiation
    #- file: chapters/generic-lists
    #- file: chapters/type-signatures
    #- file: chapters/uml-class-diagrams
    #- file: chapters/

    - file: chapters/static-fields
    - file: chapters/static-constructors
    - file: chapters/static-methods
    #- file: chapters/static-method-overloading # TODO: Or just mention in methods?
    - file: chapters/static-properties
    - file: chapters/static-classes

    - file: chapters/top-level-statements
    #- file: chapters/command-line-arguments

    #- file: chapters/extension-methods # TODO: Important!
    - file: chapters/object-composition

    - file: chapters/interfaces
    - file: chapters/subtype-polymorphism
    - file: chapters/run-time-type-vs-compile-time-type
    - file: chapters/dynamic-dispatch
    - file: chapters/multiple-interfaces

    - file: chapters/default-interface-methods

    - file: chapters/inheritance
    - file: chapters/overriding
    - file: chapters/hiding
    - file: chapters/the-base-keyword
    - file: chapters/constructor-chaining # TODO: Split in two?
    - file: chapters/protected
    - file: chapters/abstract-classes
    - file: chapters/interface-inheritance

    - file: chapters/type-conversions # TODO: Split subchapters into own chapters?
    - file: chapters/upcasting
    - file: chapters/downcasting
    - file: chapters/everything-is-an-object

    #- file: chapters/basic-exceptions # TODO

    #  TODO: Move these after generics and variance?
    - file: chapters/uml-class-diagrams
    - file: chapters/maintainability
    - file: chapters/refactoring

    - file: chapters/generics
    - file: chapters/generic-types
    - file: chapters/generics-and-type-errors
    - file: chapters/generic-supertypes
    - file: chapters/generic-methods
    - file: chapters/type-parameter-constraints

    - file: chapters/collections
    - file: chapters/collection-initializers

    - file: chapters/replace-conditional-with-polymorphism
    - file: chapters/dependency-injection
    #- file: chapters/program-to-interfaces-not-implementations
    - file: chapters/composition-over-inheritance
    #- file: chapters/fragile-base-class-problem

    #- file: chapters/nothingness # TODO: Split?

    #- file: chapters/design-principles
    #- file: chapters/types-over-tests
    #- file: chapters/single-responsibility-principle
    #- file: chapters/interface-segregation-principle
    #- file: chapters/define-errors-out-of-existence
    #- file: chapters/open-closed-principle
    #- file: chapters/dependency-inversion-principle

    #- file: chapters/design-patterns

    - file: chapters/strategy-pattern
    #- file: chapters/null-object-pattern
    - file: chapters/bridge-pattern
    - file: chapters/delegates
    - file: chapters/generic-delegates
    - file: chapters/built-in-delegates
    #- file: chapters/anonymous-delegates # TODO
    #- file: chapters/delegates-and-instance-state # TODO
    - file: chapters/multicast-delegates
    - file: chapters/lambdas

    - file: chapters/observer-pattern
    - file: chapters/events
    - file: chapters/event-conventions
    #- file: chapters/async
    - file: chapters/event-driven-programming # TODO

    #- file: chapters/adapter-pattern
    #- file: chapters/static-factory-methods
    #- file: chapters/factory-method-pattern
    #- file: chapters/composite-pattern
    #- file: chapters/state-pattern

    - file: chapters/iterator-pattern
    - file: chapters/enumerables
    - file: chapters/the-yield-statement
    #- file: chapters/lazy-evaluation

    - file: chapters/anonymous-types
    - file: chapters/linq

    #- file: chapters/visitor-pattern

    - file: chapters/variance
    - file: chapters/covariance
    - file: chapters/contravariance
    - file: chapters/invariance
    - file: chapters/liskov-substitution-principle # TODO
    - file: chapters/variant-classes # TODO
    - file: chapters/variant-delegates # TODO
    - file: chapters/variant-generic-delegates # TODO
    - file: chapters/variant-generic-interfaces # TODO

    #- file: chapters/threads # TODO

    #- file: chapters/type-testing
    #- file: chapters/pattern-matching

    # ---------------

    #- file: chapters/sets
    #- file: chapters/functions
    #- file: chapters/predicates
    #- file: chapters/terminals
    #- file: chapters/standard-out
    #- file: chapters/standard-in
    #- file: chapters/algorithms
    #- file: chapters/computation
    #- file: chapters/syntactic-sugar
    #- file: chapters/errors
    #- file: chapters/source-code
    #- file: chapters/markup
    #- file: chapters/documentation
    #- file: chapters/indentation
    #- file: chapters/naming

    #- file: chapters/semantics
    #- file: chapters/paradigms
    #- file: chapters/type-systems
    #- file: chapters/type-hierarchies
    #- file: chapters/simple-types

    #- file: chapters/value-tuples
    #- file: chapters/mutability
    #- file: chapters/immutable-objects
    #- file: chapters/nullable-value-types
    #- file: chapters/nullable-reference-types
    #- file: chapters/method-composition
    #- file: chapters/purity

    #- file: chapters/overloading
    #- file: chapters/data-structures
    #- file: chapters/scope

    #- file: chapter/type-aliases
    #- file: chapters/stack-traces
    #- file: chapters/requirements
    #- file: chapters/validation
    #- file: chapters/verification
    #- file: chapters/coupling
    #- file: chapters/dont-repeat-yourself
    #- file: chapters/fail-fast
    #- file: chapters/pillars
    #- file: chapters/objects-old

    #- file: chapters/private-constructors
    #- file: chapters/open-recursion # TODO

    #- file: chapters/concrete-constructed-object-composition
    #- file: chapters/concrete-injected-object-composition
    #- file: chapters/abstract-constructed-object-composition
    #- file: chapters/abstract-injected-object-composition

    #- file: chapters/documentation-driven-development

    #- file: chapters/deep-classes
    #- file: chapters/code-smells
    #- file: chapters/enumerators
    #- file: chapters/indexers
    #- file: chapters/streams
    #- file: chapters/custom-exceptions
    #- file: chapters/prototypes
    #- file: chapters/base-class-library
    #- file: chapters/boxing
    #- file: chapters/structure-types
    #- file: chapters/anonymous-types
    #- file: chapters/leaky-abstractions
    #- file: chapters/abstraction
    #- file: chapters/indirection
    #- file: chapters/business-logic
    #- file: chapters/business-objects
    #- file: chapters/debugging
    #- file: chapters/reading
    #- file: chapters/reactive

    #- file: chapters/bibliography
  - caption: Labs (part 1)
    numbered: false
    chapters:
    - file: labs/fields
    - file: labs/instance-methods
    - file: labs/encapsulation
    - file: labs/instance-method-overloading
    - file: labs/constructor-overloading
    - file: labs/manually-implemented-properties
    - file: labs/computed-properties
    - file: labs/static
    - file: labs/object-composition
    - file: labs/interfaces
    - file: labs/subtype-polymorphism
    - file: labs/overriding
    #- file: labs/overriding-2
    - file: labs/default-interface-methods
    - file: labs/the-base-keyword
    - file: labs/constructor-chaining
    - file: labs/protected
    - file: labs/abstract-classes
    - file: labs/type-conversions
    - file: labs/dependency-injection
    - file: labs/replace-conditional-with-polymorphism
    - file: labs/composition-over-inheritance
  - caption: Labs (part 2)
    numbered: false
    chapters:
    - file: labs/generics
    - file: labs/generic-types
    - file: labs/generic-supertypes
    - file: labs/type-parameter-constraints
    #- file: labs/collections
    #- file: labs/collection-initializers
    - file: labs/bridge-pattern
    - file: labs/delegates
    - file: labs/lambdas
    - file: labs/observer-pattern
    - file: labs/events
    - file: labs/iterator-pattern
    - file: labs/enumerables
    - file: labs/the-yield-keyword
    - file: labs/variant-classes
    - file: labs/variant-delegates
    - file: labs/variant-generic-delegates
    - file: labs/variant-generic-interfaces

